name: default

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: push sro-app
        uses: docker/build-push-action@v4
        with:
          push: true
          file: Dockerfile-app
          tags: ${{ secrets.DOCKER_USER }}/sro-app:latest

      - name: push sro-nginx
        uses: docker/build-push-action@v4
        with:
          push: true
          file: Dockerfile-nginx
          tags: ${{ secrets.DOCKER_USER }}/sro-nginx:latest


  deploy:
    environment: production
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@master
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            export DOCKER_USER="${{ secrets.DOCKER_USER }}"
            export DB_NAME="${{ secrets.DB_NAME }}"
            export DB_USER="${{ secrets.DB_USER }}"
            export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
            export DB_HOST="${{ secrets.DB_HOST }}"
            export DB_PORT="${{ secrets.DB_PORT }}"
            export DEBUG="${{ 0 }}"
            export CACHE_TIMEOUT=${{ 3600 }}
            export DJANGO_ALLOWED_HOSTS="${{ secrets.DJANGO_ALLOWED_HOSTS }}"

            # login Docker Hub
            # docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_TOKEN }}
            echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin

            cd web
            # docker-compose stop
            
            docker-compose down
            docker volume rm sro_static sro_errors
            
            docker-compose rm -f
            docker-compose pull
            docker-compose up -d
            
            docker exec -i app python manage.py clearcache