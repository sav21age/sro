# Generated by Django 4.1.10 on 2023-09-03 09:50

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CompensationFundPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visible', models.BooleanField(db_index=True, default=1, verbose_name='показывать?')),
                ('head_title', models.CharField(max_length=80, verbose_name='title')),
                ('meta_description', models.CharField(max_length=160, verbose_name='meta description')),
                ('title', models.CharField(max_length=250, verbose_name='h1-заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления')),
                ('text_top', models.TextField(blank=True, verbose_name='текст')),
                ('text_bottom', models.TextField(blank=True, verbose_name='текст')),
            ],
            options={
                'verbose_name': 'компенсационный фонд',
                'verbose_name_plural': 'компенсационные фонды',
            },
        ),
        migrations.CreateModel(
            name='ContactPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visible', models.BooleanField(db_index=True, default=1, verbose_name='показывать?')),
                ('head_title', models.CharField(max_length=80, verbose_name='title')),
                ('meta_description', models.CharField(max_length=160, verbose_name='meta description')),
                ('title', models.CharField(max_length=250, verbose_name='h1-заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='телефон')),
                ('contact_person', models.CharField(blank=True, max_length=200, null=True, verbose_name='контактное лицо')),
                ('contact_position', models.CharField(blank=True, max_length=200, null=True, verbose_name='должность контактного лица')),
                ('email', models.CharField(blank=True, max_length=50, null=True, verbose_name='email')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='адрес')),
                ('map', models.TextField(blank=True, null=True, verbose_name='карта')),
            ],
            options={
                'verbose_name': 'контакты',
                'verbose_name_plural': 'контакты',
            },
        ),
        migrations.CreateModel(
            name='DecisionMeetingPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visible', models.BooleanField(db_index=True, default=1, verbose_name='показывать?')),
                ('head_title', models.CharField(max_length=80, verbose_name='title')),
                ('meta_description', models.CharField(max_length=160, verbose_name='meta description')),
                ('title', models.CharField(max_length=250, verbose_name='h1-заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления')),
                ('text_top', models.TextField(blank=True, verbose_name='текст')),
                ('text_bottom', models.TextField(blank=True, verbose_name='текст')),
            ],
            options={
                'verbose_name': 'решения собраний',
                'verbose_name_plural': 'решения собраний',
            },
        ),
        migrations.CreateModel(
            name='FederalLawPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visible', models.BooleanField(db_index=True, default=1, verbose_name='показывать?')),
                ('head_title', models.CharField(max_length=80, verbose_name='title')),
                ('meta_description', models.CharField(max_length=160, verbose_name='meta description')),
                ('title', models.CharField(max_length=250, verbose_name='h1-заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления')),
                ('text_top', models.TextField(blank=True, verbose_name='текст')),
                ('text_bottom', models.TextField(blank=True, verbose_name='текст')),
            ],
            options={
                'verbose_name': 'федеральные законы',
                'verbose_name_plural': 'федеральные законы',
            },
        ),
        migrations.CreateModel(
            name='IndexPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visible', models.BooleanField(db_index=True, default=1, verbose_name='показывать?')),
                ('head_title', models.CharField(max_length=80, verbose_name='title')),
                ('meta_description', models.CharField(max_length=160, verbose_name='meta description')),
                ('title', models.CharField(max_length=250, verbose_name='h1-заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления')),
                ('text', models.TextField(blank=True, verbose_name='текст')),
                ('struct', models.TextField(blank=True, verbose_name='текст')),
                ('founders', models.TextField(blank=True, verbose_name='текст')),
            ],
            options={
                'verbose_name': 'главная страница',
                'verbose_name_plural': 'главная страница',
            },
        ),
        migrations.CreateModel(
            name='InspectionPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visible', models.BooleanField(db_index=True, default=1, verbose_name='показывать?')),
                ('head_title', models.CharField(max_length=80, verbose_name='title')),
                ('meta_description', models.CharField(max_length=160, verbose_name='meta description')),
                ('title', models.CharField(max_length=250, verbose_name='h1-заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления')),
                ('text_top', models.TextField(blank=True, verbose_name='текст')),
                ('text_bottom', models.TextField(blank=True, verbose_name='текст')),
            ],
            options={
                'verbose_name': 'проверка организаций',
                'verbose_name_plural': 'проверки организаций',
            },
        ),
        migrations.CreateModel(
            name='JoinUsPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visible', models.BooleanField(db_index=True, default=1, verbose_name='показывать?')),
                ('head_title', models.CharField(max_length=80, verbose_name='title')),
                ('meta_description', models.CharField(max_length=160, verbose_name='meta description')),
                ('title', models.CharField(max_length=250, verbose_name='h1-заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления')),
                ('text', models.TextField(blank=True, verbose_name='текст')),
            ],
            options={
                'verbose_name': 'вступить в СРО',
                'verbose_name_plural': 'вступить в СРО',
            },
        ),
        migrations.CreateModel(
            name='LocalRegulationPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visible', models.BooleanField(db_index=True, default=1, verbose_name='показывать?')),
                ('head_title', models.CharField(max_length=80, verbose_name='title')),
                ('meta_description', models.CharField(max_length=160, verbose_name='meta description')),
                ('title', models.CharField(max_length=250, verbose_name='h1-заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления')),
                ('text_top', models.TextField(blank=True, verbose_name='текст')),
                ('text_bottom', models.TextField(blank=True, verbose_name='текст')),
            ],
            options={
                'verbose_name': 'локальные нормативные акты',
                'verbose_name_plural': 'локальные нормативные акты',
            },
        ),
        migrations.CreateModel(
            name='MemberExcludedPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visible', models.BooleanField(db_index=True, default=1, verbose_name='показывать?')),
                ('head_title', models.CharField(max_length=80, verbose_name='title')),
                ('meta_description', models.CharField(max_length=160, verbose_name='meta description')),
                ('title', models.CharField(max_length=250, verbose_name='h1-заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления')),
                ('text_top', models.TextField(blank=True, verbose_name='текст')),
                ('text_bottom', models.TextField(blank=True, verbose_name='текст')),
            ],
            options={
                'verbose_name': 'реестр исключенных членов ассоциации',
                'verbose_name_plural': 'реестр исключенных членов ассоциации',
            },
        ),
        migrations.CreateModel(
            name='MemberPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visible', models.BooleanField(db_index=True, default=1, verbose_name='показывать?')),
                ('head_title', models.CharField(max_length=80, verbose_name='title')),
                ('meta_description', models.CharField(max_length=160, verbose_name='meta description')),
                ('title', models.CharField(max_length=250, verbose_name='h1-заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления')),
                ('text_top', models.TextField(blank=True, verbose_name='текст')),
                ('text_bottom', models.TextField(blank=True, verbose_name='текст')),
            ],
            options={
                'verbose_name': 'реестр членов ассоциации',
                'verbose_name_plural': 'реестр членов ассоциации',
            },
        ),
        migrations.CreateModel(
            name='NewsPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visible', models.BooleanField(db_index=True, default=1, verbose_name='показывать?')),
                ('head_title', models.CharField(max_length=80, verbose_name='title')),
                ('meta_description', models.CharField(max_length=160, verbose_name='meta description')),
                ('title', models.CharField(max_length=250, verbose_name='h1-заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления')),
            ],
            options={
                'verbose_name': 'новости',
                'verbose_name_plural': 'новости',
            },
        ),
        migrations.CreateModel(
            name='PriorityDirectionPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visible', models.BooleanField(db_index=True, default=1, verbose_name='показывать?')),
                ('head_title', models.CharField(max_length=80, verbose_name='title')),
                ('meta_description', models.CharField(max_length=160, verbose_name='meta description')),
                ('title', models.CharField(max_length=250, verbose_name='h1-заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления')),
                ('text', models.TextField(blank=True, verbose_name='текст')),
            ],
            options={
                'verbose_name': 'приоритетные направления',
                'verbose_name_plural': 'приоритетные направления',
            },
        ),
        migrations.CreateModel(
            name='RegulatoryLegalPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visible', models.BooleanField(db_index=True, default=1, verbose_name='показывать?')),
                ('head_title', models.CharField(max_length=80, verbose_name='title')),
                ('meta_description', models.CharField(max_length=160, verbose_name='meta description')),
                ('title', models.CharField(max_length=250, verbose_name='h1-заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления')),
                ('text_top', models.TextField(blank=True, verbose_name='текст')),
                ('text_bottom', models.TextField(blank=True, verbose_name='текст')),
            ],
            options={
                'verbose_name': 'нормативно-правовые документы',
                'verbose_name_plural': 'нормативно-правовые документы',
            },
        ),
        migrations.CreateModel(
            name='ReportingPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visible', models.BooleanField(db_index=True, default=1, verbose_name='показывать?')),
                ('head_title', models.CharField(max_length=80, verbose_name='title')),
                ('meta_description', models.CharField(max_length=160, verbose_name='meta description')),
                ('title', models.CharField(max_length=250, verbose_name='h1-заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления')),
            ],
            options={
                'verbose_name': 'отчетность',
                'verbose_name_plural': 'отчетность',
            },
        ),
        migrations.CreateModel(
            name='TechnicalRegulationPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visible', models.BooleanField(db_index=True, default=1, verbose_name='показывать?')),
                ('head_title', models.CharField(max_length=80, verbose_name='title')),
                ('meta_description', models.CharField(max_length=160, verbose_name='meta description')),
                ('title', models.CharField(max_length=250, verbose_name='h1-заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата обновления')),
                ('text_top', models.TextField(blank=True, verbose_name='текст')),
                ('text_bottom', models.TextField(blank=True, verbose_name='текст')),
            ],
            options={
                'verbose_name': 'технические регламенты',
                'verbose_name_plural': 'технические регламенты',
            },
        ),
    ]
